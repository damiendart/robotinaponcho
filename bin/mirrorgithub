#!/usr/bin/env python3
"""Downloads and updates mirrors of a GitHub user's public repositories.

Copyright (C) 2013-2019 Damien Dart, <damiendart@pobox.com>.
This file is distributed under the MIT licence. For more information,
please refer to the accompanying "LICENCE" file.
"""

import json
import os
import pathlib
import re
import sys
import urllib.request
import subprocess


if __name__ == "__main__":
  no_forks = False
  if len(sys.argv) < 4:
    sys.stderr.write("Not enough operands\n")
    sys.stderr.write("USAGE: %s [--no-forks] GITHUB-USERNAME FOLDER OAUTH2-TOKEN\n" % sys.argv[0])
    sys.exit(1)
  if "--no-forks" in sys.argv:
    sys.argv.remove("--no-forks")
    no_forks = True
  repositories = json.loads(urllib.request.urlopen(
      "https://api.github.com/users/%s/repos?access_token=%s" %
      (sys.argv[1], sys.argv[3])).read().decode("utf-8"))
  base_directory = pathlib.Path(os.path.normpath(sys.argv[2])).resolve()
  for repository in repositories:
    os.chdir(base_directory)
    if not (no_forks and repository["fork"]):
      if os.path.isdir(os.path.join(
          base_directory, os.path.basename(repository["git_url"]))):
        subprocess.check_call(["git", "fetch", "-q"],
            cwd=os.path.basename(repository["git_url"]))
      else:
        subprocess.check_call(["git", "clone", "-q", "--mirror",
            repository["git_url"]])
      os.chdir(os.path.basename(repository["git_url"]))
      subprocess.check_call(["git", "config", "--replace-all",
          "gitweb.description", repository["description"]])
      open("git-daemon-export-ok", "a").close() # For "git http-backend".
      subprocess.check_call(["git", "update-server-info"])

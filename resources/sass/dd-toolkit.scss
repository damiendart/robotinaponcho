// A little library of Sass bits and pieces.
//
// Copyright (C) 2013-2019 Damien Dart, <damiendart@pobox.com>.
// This file is distributed under the MIT licence. For more information,
// please refer to the accompanying "LICENCE" file.

$rem-base: 16px;

// The following media-query-related bits-and-pieces are based on
// Foundation 5's handling of media queries. For more information, see
// <https://foundation.zurb.com/sites/docs/v/5.5.3/media-queries.html>.

$one-pixel: (1px / $rem-base) * 1rem;

$x-small-breakpoint: (320px / $rem-base) * 1rem;
$small-breakpoint: (480px / $rem-base) * 1rem;
$medium-breakpoint: (768px / $rem-base) * 1rem;
$large-breakpoint: (1024px / $rem-base) * 1rem;
$x-large-breakpoint: (1440px / $rem-base) * 1rem;

$media-screen: "only screen";

$media-x-small: "#{$media-screen}";
$media-small: "#{$media-screen} and (min-width: #{$x-small-breakpoint + $one-pixel})";
$media-medium: "#{$media-screen} and (min-width: #{$small-breakpoint + $one-pixel})";
$media-large: "#{$media-screen} and (min-width: #{$medium-breakpoint + $one-pixel})";
$media-x-large: "#{$media-screen} and (min-width: #{$large-breakpoint + $one-pixel})";

$media-x-small-down: "#{$media-screen} and (max-width: #{$x-small-breakpoint})";
$media-small-down: "#{$media-screen} and (max-width: #{$small-breakpoint})";
$media-medium-down: "#{$media-screen} and (max-width: #{$medium-breakpoint})";
$media-large-down: "#{$media-screen} and (max-width: #{$large-breakpoint})";
$media-x-large-down: "#{$media-screen} and (max-width: #{$x-large-breakpoint})";

// This is a gross hack for targeting Internet Explorer 10 and 11. For more
// information, see <https://stackoverflow.com/a/20541859>.
$media-ie-10: "all and (-ms-high-contrast: none), (-ms-high-contrast: active)";


@function contrasting-colour($colour) {
  // This function is based on code from
  // <https://css-tricks.com/css-variables-calc-rgb-enforcing-high-contrast-colors/>.
  $sum: (red($colour) * 299) + (green($colour) * 587) + (blue($colour) * 144);
  @if $sum > 128000 {
    @return #000000; }
  @return #ffffff; }

@function sqrt($number) {
  // This function is based on code from
  // <https://css-tricks.com/snippets/sass/strip-unit-function/> and
  // <http://www.antimath.info/css/sass-sqrt-function/>.
  $x: 1;
  @if type-of($number) == "number" and not unitless($number) {
    $number: $number / ($number * 0 + 1); }
  @for $i from 1 through 10 {
    $x: $x - ($x * $x - abs($number)) / (2 * $x); }
  @return $x; }


@mixin clearfix {
  zoom: 1;
  &:after {
    clear: both; }
  &:before, &:after {
    content: "";
    display: table; } }

@mixin clickable-reset {
  // Correct inability to style clickable types in iOS and Safari. For
  // more information, see <https://github.com/necolas/normalize.css>.
  -webkit-appearance: button;
  border-radius: 0; }

// TODO: Clean this up and add documentation.
@mixin hamburger($width, $layer-height, $spacing-height) {
  /* div */.hamburger {
    $height: $layer-height * 3 + $spacing-height * 2;
    display: inline-block;
    height: $height;
    position: relative;
    width: $width;
    &__filling {
      margin: $layer-height / -2 0 0 0;
      top: 50%;
      &:after {
        bottom: ($spacing-height + $layer-height) * -1;
        content: ""; }
      &:before {
        content: "";
        top: ($spacing-height + $layer-height) * -1; }
      &, &:after, &:before {
        background: currentColor;
        border-radius: $layer-height;
        display: block;
        height: $layer-height;
        position: absolute;
        width: 100%; } }
    &--active {
      transform: rotate(-45deg);
      .hamburger__filling {
        &:after {
          transform: translate3d(0, ($spacing-height + $layer-height) * -1, 0) rotate(-90deg); }
        &:before {
          opacity: 0;
          transform: translate3d(0, $spacing-height + $layer-height, 0) rotate(45deg); } } } } }

@mixin nice-font-rendering {
  // Based on <https://gist.github.com/hsleonis/55712b0eafc9b25f1944>.
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased; // Autoprefixer omits this.
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  // Webkit on iOS devices (at least the ones I've tried) require the
  // "-webkit-" prefix here despite Autoprefixer thinking otherwise.
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; // Just In Case(tm).
  text-size-adjust: none; }
